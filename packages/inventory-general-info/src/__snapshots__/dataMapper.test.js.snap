// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`diskMapper - no data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Device",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Label",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Mount point",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Type",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "expandable": true,
  "rows": Array [],
}
`;

exports[`diskMapper 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Device",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Label",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Mount point",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Type",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "expandable": true,
  "rows": Array [
    Object {
      "cells": Array [
        "device",
        "label",
        "mount",
        "type",
      ],
      "child": <div>
        test=data
      </div>,
      "isOpen": false,
    },
  ],
}
`;

exports[`diskMapper with values 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Device",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Label",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Mount point",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Type",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "expandable": true,
  "rows": Array [
    Object {
      "cells": Array [
        "device",
        Object {
          "value": "label",
        },
        "mount",
        "type",
      ],
      "child": <div>
        test=data
      </div>,
      "isOpen": false,
    },
  ],
}
`;

exports[`generalMapper - no data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "filters": Array [
    Object {
      "type": "textual",
    },
  ],
  "rows": Array [],
}
`;

exports[`generalMapper 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "test",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "filters": Array [
    Object {
      "type": "textual",
    },
  ],
  "rows": Array [
    Array [
      "one",
    ],
    Array [
      "two",
    ],
  ],
}
`;

exports[`interfaceMapper - no data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "MAC address",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "MTU",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Name",
      "transforms": Array [
        [Function],
      ],
    },
    "State",
    Object {
      "title": "Type",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "rows": Array [],
}
`;

exports[`interfaceMapper 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "MAC address",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "MTU",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Name",
      "transforms": Array [
        [Function],
      ],
    },
    "State",
    Object {
      "title": "Type",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "rows": Array [
    Array [
      "test-mac",
      "test-mtu",
      "test-name",
      Object {
        "title": <Tooltip
          content={
            <div>
              Service is running
            </div>
          }
        >
          <span>
            <OutlinedArrowAltCircleUpIcon
              className="ins-c-inventory__detail--up"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      "test-type",
    ],
    Array [
      "test-mac2",
      "test-mtu2",
      "test-name2",
      Object {
        "title": <Tooltip
          content={
            <div>
              Service is stopped
            </div>
          }
        >
          <span>
            <OutlinedArrowAltCircleDownIcon
              className="ins-c-inventory__detail--down"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      "test-type2",
    ],
    Array [
      "test-mac2",
      "test-mtu2",
      "test-name2",
      Object {
        "title": <Tooltip
          content={
            <div>
              Unknown service status
            </div>
          }
        >
          <span>
            <OutlinedQuestionCircleIcon
              className="ins-c-inventory__detail--unknown"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      "test-type2",
    ],
  ],
}
`;

exports[`productsMapper - no data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Name",
      "transforms": Array [
        [Function],
      ],
    },
    "Status",
  ],
  "rows": Array [],
}
`;

exports[`productsMapper 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Name",
      "transforms": Array [
        [Function],
      ],
    },
    "Status",
  ],
  "rows": Array [
    Array [
      "test-name",
      Object {
        "title": <OutlinedQuestionCircleIcon
          className="ins-c-inventory__detail--unknown"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />,
      },
    ],
    Array [
      "test-name",
      Object {
        "title": <OutlinedQuestionCircleIcon
          className="ins-c-inventory__detail--unknown"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />,
      },
    ],
    Array [
      "test-name",
      Object {
        "title": <OutlinedQuestionCircleIcon
          className="ins-c-inventory__detail--unknown"
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />,
      },
    ],
  ],
}
`;

exports[`repositoriesMapper - no data 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Name",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Enabled",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "GPG check",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "filters": Array [
    Object {
      "type": "textual",
    },
    Object {
      "options": Array [
        Object {
          "label": "Is enabled",
          "value": "true",
        },
        Object {
          "label": "Not enabled",
          "value": "false",
        },
      ],
      "type": "checkbox",
    },
    Object {
      "options": Array [
        Object {
          "label": "Is enabled",
          "value": "true",
        },
        Object {
          "label": "Not enabled",
          "value": "false",
        },
      ],
      "type": "checkbox",
    },
  ],
  "rows": Array [],
}
`;

exports[`repositoriesMapper 1`] = `
Object {
  "cells": Array [
    Object {
      "title": "Name",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "Enabled",
      "transforms": Array [
        [Function],
      ],
    },
    Object {
      "title": "GPG check",
      "transforms": Array [
        [Function],
      ],
    },
  ],
  "filters": Array [
    Object {
      "type": "textual",
    },
    Object {
      "options": Array [
        Object {
          "label": "Is enabled",
          "value": "true",
        },
        Object {
          "label": "Not enabled",
          "value": "false",
        },
      ],
      "type": "checkbox",
    },
    Object {
      "options": Array [
        Object {
          "label": "Is enabled",
          "value": "true",
        },
        Object {
          "label": "Not enabled",
          "value": "false",
        },
      ],
      "type": "checkbox",
    },
  ],
  "rows": Array [
    Array [
      Object {
        "sortValue": "test-name",
        "title": "test-name",
      },
      Object {
        "sortValue": "true",
        "title": <Tooltip
          content={
            <div>
              Source enabled
            </div>
          }
        >
          <span>
            <CheckCircleIcon
              className="ins-c-inventory__detail--enabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      Object {
        "sortValue": "false",
        "title": <Tooltip
          content={
            <div>
              Source disabled
            </div>
          }
        >
          <span>
            <TimesIcon
              className="ins-c-inventory__detail--disabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
    ],
    Array [
      Object {
        "sortValue": "test-name",
        "title": "test-name",
      },
      Object {
        "sortValue": "true",
        "title": <Tooltip
          content={
            <div>
              Source enabled
            </div>
          }
        >
          <span>
            <CheckCircleIcon
              className="ins-c-inventory__detail--enabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      Object {
        "sortValue": "true",
        "title": <Tooltip
          content={
            <div>
              Source enabled
            </div>
          }
        >
          <span>
            <CheckCircleIcon
              className="ins-c-inventory__detail--enabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
    ],
    Array [
      Object {
        "sortValue": "test-name",
        "title": "test-name",
      },
      Object {
        "sortValue": "false",
        "title": <Tooltip
          content={
            <div>
              Source disabled
            </div>
          }
        >
          <span>
            <TimesIcon
              className="ins-c-inventory__detail--disabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      Object {
        "sortValue": "false",
        "title": <Tooltip
          content={
            <div>
              Source disabled
            </div>
          }
        >
          <span>
            <TimesIcon
              className="ins-c-inventory__detail--disabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
    ],
    Array [
      Object {
        "sortValue": "test-name",
        "title": "test-name",
      },
      Object {
        "sortValue": "undefined",
        "title": <Tooltip
          content={
            <div>
              Source disabled
            </div>
          }
        >
          <span>
            <TimesIcon
              className="ins-c-inventory__detail--disabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
      Object {
        "sortValue": "false",
        "title": <Tooltip
          content={
            <div>
              Source disabled
            </div>
          }
        >
          <span>
            <TimesIcon
              className="ins-c-inventory__detail--disabled"
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
            />
          </span>
        </Tooltip>,
      },
    ],
  ],
}
`;

exports[`should return DOWN 1`] = `
<Popper
  appendTo={[Function]}
  distance={15}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  isVisible={false}
  onBlur={[Function]}
  onDocumentClick={false}
  onDocumentKeyDown={[Function]}
  onFocus={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onTriggerEnter={[Function]}
  placement="top"
  popper={
    <div
      className="pf-c-tooltip"
      id="pf-tooltip-2"
      role="tooltip"
      style={
        Object {
          "maxWidth": null,
          "opacity": 0,
          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
        }
      }
    >
      <TooltipArrow />
      <TooltipContent
        isLeftAligned={false}
      >
        <div>
          Service is stopped
        </div>
      </TooltipContent>
    </div>
  }
  popperMatchesTriggerWidth={false}
  positionModifiers={
    Object {
      "bottom": "pf-m-bottom",
      "left": "pf-m-left",
      "right": "pf-m-right",
      "top": "pf-m-top",
    }
  }
  trigger={
    <span
      aria-describedby="pf-tooltip-2"
    >
      <OutlinedArrowAltCircleDownIcon
        className="ins-c-inventory__detail--down"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    </span>
  }
  zIndex={9999}
/>
`;

exports[`should return UP 1`] = `
<Popper
  appendTo={[Function]}
  distance={15}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  isVisible={false}
  onBlur={[Function]}
  onDocumentClick={false}
  onDocumentKeyDown={[Function]}
  onFocus={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onTriggerEnter={[Function]}
  placement="top"
  popper={
    <div
      className="pf-c-tooltip"
      id="pf-tooltip-1"
      role="tooltip"
      style={
        Object {
          "maxWidth": null,
          "opacity": 0,
          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
        }
      }
    >
      <TooltipArrow />
      <TooltipContent
        isLeftAligned={false}
      >
        <div>
          Service is running
        </div>
      </TooltipContent>
    </div>
  }
  popperMatchesTriggerWidth={false}
  positionModifiers={
    Object {
      "bottom": "pf-m-bottom",
      "left": "pf-m-left",
      "right": "pf-m-right",
      "top": "pf-m-top",
    }
  }
  trigger={
    <span
      aria-describedby="pf-tooltip-1"
    >
      <OutlinedArrowAltCircleUpIcon
        className="ins-c-inventory__detail--up"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    </span>
  }
  zIndex={9999}
/>
`;

exports[`should return false 1`] = `
<Popper
  appendTo={[Function]}
  distance={15}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  isVisible={false}
  onBlur={[Function]}
  onDocumentClick={false}
  onDocumentKeyDown={[Function]}
  onFocus={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onTriggerEnter={[Function]}
  placement="top"
  popper={
    <div
      className="pf-c-tooltip"
      id="pf-tooltip-4"
      role="tooltip"
      style={
        Object {
          "maxWidth": null,
          "opacity": 0,
          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
        }
      }
    >
      <TooltipArrow />
      <TooltipContent
        isLeftAligned={false}
      >
        <div>
          Source disabled
        </div>
      </TooltipContent>
    </div>
  }
  popperMatchesTriggerWidth={false}
  positionModifiers={
    Object {
      "bottom": "pf-m-bottom",
      "left": "pf-m-left",
      "right": "pf-m-right",
      "top": "pf-m-top",
    }
  }
  trigger={
    <span
      aria-describedby="pf-tooltip-4"
    >
      <TimesIcon
        className="ins-c-inventory__detail--disabled"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    </span>
  }
  zIndex={9999}
/>
`;

exports[`should return true 1`] = `
<Popper
  appendTo={[Function]}
  distance={15}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  isVisible={false}
  onBlur={[Function]}
  onDocumentClick={false}
  onDocumentKeyDown={[Function]}
  onFocus={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  onTriggerEnter={[Function]}
  placement="top"
  popper={
    <div
      className="pf-c-tooltip"
      id="pf-tooltip-3"
      role="tooltip"
      style={
        Object {
          "maxWidth": null,
          "opacity": 0,
          "transition": "opacity 300ms cubic-bezier(.54, 1.5, .38, 1.11)",
        }
      }
    >
      <TooltipArrow />
      <TooltipContent
        isLeftAligned={false}
      >
        <div>
          Source enabled
        </div>
      </TooltipContent>
    </div>
  }
  popperMatchesTriggerWidth={false}
  positionModifiers={
    Object {
      "bottom": "pf-m-bottom",
      "left": "pf-m-left",
      "right": "pf-m-right",
      "top": "pf-m-top",
    }
  }
  trigger={
    <span
      aria-describedby="pf-tooltip-3"
    >
      <CheckCircleIcon
        className="ins-c-inventory__detail--enabled"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    </span>
  }
  zIndex={9999}
/>
`;
